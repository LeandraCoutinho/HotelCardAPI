// <auto-generated />
using System;
using HotelCard.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelCard.Infra.Data.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250210003759_update-consumption-product")]
    partial class updateconsumptionproduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HotelCard.Domain.Entities.AccessArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AccessAreas");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateConsumption")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("Consumptions");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.ConsumptionProduct", b =>
                {
                    b.Property<int>("ConsumptionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("TotalValue")
                        .HasColumnType("double");

                    b.HasKey("ConsumptionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ConsumptionProducts");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FinishAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HolderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("HolderId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.ContractRoom", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("ContractId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("ContractRooms");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TokenResetExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenResetPassword")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("CardOfNumber")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("CellPhone")
                        .HasColumnType("longtext");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<ulong>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsHolder")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.GuestAccessArea", b =>
                {
                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("AccessAreaId")
                        .HasColumnType("int");

                    b.HasKey("GuestId", "AccessAreaId");

                    b.HasIndex("AccessAreaId");

                    b.ToTable("GuestAccessAreas");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.GuestFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessAreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AccessTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessAreaId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestFlow");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("DailyPrice")
                        .HasColumnType("double");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Consumption", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.Guest", "Guest")
                        .WithMany("Consumptions")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.ConsumptionProduct", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.Consumption", "Consumption")
                        .WithMany("ConsumptionProducts")
                        .HasForeignKey("ConsumptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelCard.Domain.Entities.Product", "Product")
                        .WithMany("ConsumptionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumption");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Contract", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.Guest", "Holder")
                        .WithMany()
                        .HasForeignKey("HolderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Holder");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.ContractRoom", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.Contract", "Contract")
                        .WithMany("ContractRooms")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelCard.Domain.Entities.Room", "Room")
                        .WithMany("ContractRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Guest", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.Contract", null)
                        .WithMany("Dependents")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.GuestAccessArea", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.AccessArea", "AccessArea")
                        .WithMany("GuestAccessAreas")
                        .HasForeignKey("AccessAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelCard.Domain.Entities.Guest", "Guest")
                        .WithMany("GuestAccessAreas")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessArea");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.GuestFlow", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.AccessArea", "AccessArea")
                        .WithMany()
                        .HasForeignKey("AccessAreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelCard.Domain.Entities.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessArea");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Room", b =>
                {
                    b.HasOne("HotelCard.Domain.Entities.Contract", null)
                        .WithMany("Rooms")
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.AccessArea", b =>
                {
                    b.Navigation("GuestAccessAreas");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Consumption", b =>
                {
                    b.Navigation("ConsumptionProducts");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Contract", b =>
                {
                    b.Navigation("ContractRooms");

                    b.Navigation("Dependents");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Guest", b =>
                {
                    b.Navigation("Consumptions");

                    b.Navigation("GuestAccessAreas");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Product", b =>
                {
                    b.Navigation("ConsumptionProducts");
                });

            modelBuilder.Entity("HotelCard.Domain.Entities.Room", b =>
                {
                    b.Navigation("ContractRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
